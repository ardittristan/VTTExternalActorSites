{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/pf2e/handlebars/helpers/stringify.js","webpack:///./node_modules/dot-prop/index.js","webpack:///./node_modules/is-obj/index.js","webpack:///./src/pf2e/libs/modifiers.js","webpack:///./src/pf2e/libs/conditions.js","webpack:///./src/pf2e/libs/bulk.js","webpack:///./src/pf2e/libs/container.js","webpack:///./src/pf2e/libs/encumbrance.js","webpack:///./src/pf2e/libs/ChatData.js","webpack:///./src/pf2e/populatesheet.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","dotProp","require","i18n","isObj","disallowedKeys","Set","getPathSegments","path","pathArray","split","parts","length","undefined","slice","push","some","segment","has","root","type","PF2ModifierType","freeze","ABILITY","PROFICIENCY","CIRCUMSTANCE","ITEM","STATUS","UNTYPED","PF2Modifier","constructor","modifier","enabled","source","notes","this","ignored","custom","UNTRAINED","TRAINED","EXPERT","MASTER","LEGENDARY","ProficiencyModifier","fromLevelAndRank","level","rank","atLevel","RangeError","ConditionManager","items","conditions","Map","sort","a","b","__sortCondition","forEach","condition","data","base","isValued","id","_id","active","description","img","references","parents","children","overrides","overriddenBy","immunityFrom","set","parent","refCondition","find","ref","text","item","Array","from","values","localeCompare","Bulk","normal","light","Math","floor","toLightBulk","isNegligible","plus","bulk","minus","thisBulk","otherBulk","_toSingleNumber","result","times","factor","isSmallerThan","isBiggerThan","isEqualTo","isPositive","toString","defaultBulkConfig","ignoreCoinBulk","ignoreContainerOverflow","calculateBulk","stackDefinitions","nestedExtraDimensionalContainer","bulkConfig","calculateCombinedBulk","BulkItem","holdsItems","lightBulkRegex","complexBulkRegex","weightToBulk","weight","trimmed","trim","test","parseInt","lightMatch","match","complexMatch","formatBulk","quantity","stackGroup","isEquipped","unequippedBulk","equippedBulk","negateBulk","extraDimensionalContainer","mainBulk","mainOverflow","stackName","string","calculateNonStackBulk","calculateStackBulk","calculateItemBulk","childBulk","childOverflow","map","child","reduce","combineBulkAndOverflow","combinedOverflow","combineObjects","overflow","calculateChildOverflow","add","overflowBulk","remainingOverflow","reduceNestedItemBulk","first","second","mergeFunction","combinedKeys","keys","combinedObject","itemStacks","entries","filter","stackType","Error","size","lightBulk","bulkRelevantQuantity","reducesBulk","isExtraDimensionalOrWorn","x","y","firstBulk","firstOverflow","secondBulk","secondOverflow","indexBulkItemsById","bulkItems","bulkItem","fillBulkIndex","resultMap","heldBulkItem","itemsFromActorData","actorData","allIds","itemsInContainers","groupBy","containerId","buildContainerTree","toBulkItems","isPhysicalItem","groupedItems","itemId","toBulkItem","nestedItems","equipped","traits","includes","normalizeWeight","toLowerCase","stacks","bolts","arrows","slingBullets","blowgunDarts","rations","coins","gems","bulkConversions","Tiny","bulkLimitFactor","treatsAsLight","treatsAsNegligible","Small","Medium","Large","Huge","Gargantuan","ContainerData","heldItems","capacity","heldItemBulk","isInContainer","formattedNegateBulk","formattedHeldItemBulk","formattedCapacity","collapsed","_getLightBulkCapacityThreshold","heldLightBulk","percentage","fullPercentage","array","criterion","elem","toContainer","heldBulkItems","bulkCapacity","InventoryWeight","combinedBulk","encumberedAt","limit","totalTimes10","encumberedAtTimes10","limitTimes10","limitPercentage","ChatData","armorChatData","JSON","parse","stringify","properties","PF2E","armorTypes","armorType","armorGroups","group","addSign","getArmorBonus","localize","dex","check","speed","equipmentChatData","weaponChatData","itemTraits","twohandedTrait","traitsObject","label","weaponTraits","charAt","toUpperCase","traitsDescriptions","isFinesse","abl","abilities","mod","str","ability","prof","weaponType","proficiency","itemData","weaponTypes","martial","martialSkill","proficient","details","err","console","log","attackRoll","toNumber","bonus","potencyRune","critSpecialization","weaponGroups","weaponDescriptions","isTwohanded","wieldedTwoHands","hands","agile","MAP","map2","map3","calculateMap","meleeChatData","isAgile","consumableChatData","consumableType","consumableTypes","charges","max","hasCharges","treasureChatData","toolChatData","proficiencyLevels","loreChatData","backpackChatData","spellChatData","spellcastingEntry","location","spellDC","spelldc","dc","spellAttack","isSave","spellType","save","saves","damageLabel","isAttack","props","spellLevels","components","range","target","area","areaSizes","areaTypes","areaType","areasize","time","duration","spellLvl","substr","featChatData","actionType","actionTypes","featTraits","actionChatData","associatedWeapon","weapon","conditionChatData","effectChatData","armor","number","Number","isNaN","TextEditor","_decoder","document","createElement","_tabs","navSelector","contentSelector","initial","Tabs","getActionImg","action","0","1","2","3","free","reaction","passive","getProficiencyIcon","4","combineCoins","pp","gp","sp","cp","getSpellInfo","getFocusIcon","focus","icons","pool","iconHtml","iconColumn","points","prepareSpell","spellbook","spell","isNotLevelBasedSpellcasting","tradition","spellsSlotsWhereThisIsPrepared","slots","slotArr","prepared","slotSpell","highestSlotPrepared","slot","acc","cur","normalHighestSpellLevel","ceil","min","isCantrip","isFocus","spells","uses","displayPrepared","displayLevels","unpreparedSpellsLabel","school","spellSchools","spellInfo","preparedSpellSlots","spl","entrySlot","itemCopy","expended","CONFIG","fromRange","Hooks","on","sheetTemplate","baseUrl","flags","externalactor","proficiencyUntrainedModifier","rule","proficiencyVariant","proficiencyTrainedModifier","proficiencyExpertModifier","proficiencyMasterModifier","proficiencyLegendaryModifier","initModifiers","alignment","actorSizes","keyability","rankName","attributes","heroPoints","icon","hover","heroPointLevels","dying","containerWidth","maxDying","doomed","circle","cross","skull","redOpen","redClose","dyingLevel","column","getDyingIcon","wounded","usedPoint","unUsedPoint","getWoundedIcon","getDoomedIcon","perception","classDC","skl","martialSkills","skills","inventory","equipment","investedItemCount","consumable","treasure","backpack","tempSpellbook","spellcastingEntriesList","spellbooks","unassigned","spellcastingEntries","feats","ancestry","ancestryfeature","archetype","class","classfeature","skill","general","pfsboon","deityboon","curse","actions","readonlyActions","interaction","defensive","offensive","readonlyEquipment","attacks","lores","indexedBulkItems","containers","bulkItemsById","containerGroups","idIndexedContainerData","getContainerMap","investedCount","containerData","isContainer","isNotInContainer","hasEquipment","canBeEquipped","isSellableTreasure","hasInvestedTrait","isInvested","invested","approximatedBulk","totalWeight","isTwoHanded","startsWith","wieldedTwoHanded","spellRank","spellProficiency","spellAbl","breakdown","title","magicTraditions","preparationType","preparedSpells","ritual","featType","feat","actionImg","actionCategory","hasInteractionActions","hasDefensiveActions","hasOffensiveActions","int","itemBonus","embeddedEntityUpdate","flatMap","section","downtime","exploration","encounter","orphanedSpells","orphanedSpellbook","entry","equippedShield","shield","hp","maxHp","hardness","brokenThreshold","shieldBroken","featNames","bonusEncumbranceBulk","bonusLimitBulk","encumbrance","strengthModifier","bonusBulkEncumbrance","bonusBulkLimit","actorSize","bulkFactor","calculateEncumbrance","prepareItems","denomination","toCoins","calculateWealth","totalTreasure","currencies","languages","dr","resistanceTypes","di","immunityTypes","dv","weaknessTypes","ci","monsterTraits","choices","trait","selected","isArray","exceptions","fromEntries","prepareTraits","effects","getFlattenedConditions","pf2e","getData","templateObject","actor","isCharacter","isNPC","hasStamina","pfsFactions","owner","$","innerHTML","allowedProtoProperties","isCollapsed","isOverLoaded","fullPercentageMax100","isEncumbered","isOverLimit","limitPercentageMax100","html","event","currentTarget","dataset","tabTitle","click","preventDefault","li","attr","chatData","htmlOptions","itemType","enrichHTML","getChatData","secrets","hasClass","summary","slideUp","remove","div","append","hide","slideDown","toggleClass","renderItemSummary","onItemSummary","nav","removeClass","siblings","addClass","each","e","w","tagName","innerText","getAttribute","setAttribute","tooltipster","animation","delay","trigger","arrow","contentAsHTML","debug","interactive","side","theme","minWidth","activateListeners"],"mappings":"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","file":"populatesheet.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 391);\n","const dotProp = require(\"dot-prop\");\n\nmodule.exports = function (value) {\n  let local = dotProp.get(i18n, value);\n  return local || value;\n};\n","'use strict';\nconst isObj = require('is-obj');\n\nconst disallowedKeys = new Set([\n\t'__proto__',\n\t'prototype',\n\t'constructor'\n]);\n\nconst isValidPath = pathSegments => !pathSegments.some(segment => disallowedKeys.has(segment));\n\nfunction getPathSegments(path) {\n\tconst pathArray = path.split('.');\n\tconst parts = [];\n\n\tfor (let i = 0; i < pathArray.length; i++) {\n\t\tlet p = pathArray[i];\n\n\t\twhile (p[p.length - 1] === '\\\\' && pathArray[i + 1] !== undefined) {\n\t\t\tp = p.slice(0, -1) + '.';\n\t\t\tp += pathArray[++i];\n\t\t}\n\n\t\tparts.push(p);\n\t}\n\n\tif (!isValidPath(parts)) {\n\t\treturn [];\n\t}\n\n\treturn parts;\n}\n\nmodule.exports = {\n\tget(object, path, value) {\n\t\tif (!isObj(object) || typeof path !== 'string') {\n\t\t\treturn value === undefined ? object : value;\n\t\t}\n\n\t\tconst pathArray = getPathSegments(path);\n\t\tif (pathArray.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0; i < pathArray.length; i++) {\n\t\t\tobject = object[pathArray[i]];\n\n\t\t\tif (object === undefined || object === null) {\n\t\t\t\t// `object` is either `undefined` or `null` so we want to stop the loop, and\n\t\t\t\t// if this is not the last bit of the path, and\n\t\t\t\t// if it did't return `undefined`\n\t\t\t\t// it would return `null` if `object` is `null`\n\t\t\t\t// but we want `get({foo: null}, 'foo.bar')` to equal `undefined`, or the supplied value, not `null`\n\t\t\t\tif (i !== pathArray.length - 1) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn object === undefined ? value : object;\n\t},\n\n\tset(object, path, value) {\n\t\tif (!isObj(object) || typeof path !== 'string') {\n\t\t\treturn object;\n\t\t}\n\n\t\tconst root = object;\n\t\tconst pathArray = getPathSegments(path);\n\n\t\tfor (let i = 0; i < pathArray.length; i++) {\n\t\t\tconst p = pathArray[i];\n\n\t\t\tif (!isObj(object[p])) {\n\t\t\t\tobject[p] = {};\n\t\t\t}\n\n\t\t\tif (i === pathArray.length - 1) {\n\t\t\t\tobject[p] = value;\n\t\t\t}\n\n\t\t\tobject = object[p];\n\t\t}\n\n\t\treturn root;\n\t},\n\n\tdelete(object, path) {\n\t\tif (!isObj(object) || typeof path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pathArray = getPathSegments(path);\n\n\t\tfor (let i = 0; i < pathArray.length; i++) {\n\t\t\tconst p = pathArray[i];\n\n\t\t\tif (i === pathArray.length - 1) {\n\t\t\t\tdelete object[p];\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tobject = object[p];\n\n\t\t\tif (!isObj(object)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\n\thas(object, path) {\n\t\tif (!isObj(object) || typeof path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pathArray = getPathSegments(path);\n\t\tif (pathArray.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// eslint-disable-next-line unicorn/no-for-loop\n\t\tfor (let i = 0; i < pathArray.length; i++) {\n\t\t\tif (isObj(object)) {\n\t\t\t\tif (!(pathArray[i] in object)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tobject = object[pathArray[i]];\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n};\n","'use strict';\n\nmodule.exports = value => {\n\tconst type = typeof value;\n\treturn value !== null && (type === 'object' || type === 'function');\n};\n","const PF2ModifierType = Object.freeze({\n  ABILITY: \"ability\",\n  PROFICIENCY: \"proficiency\",\n  CIRCUMSTANCE: \"circumstance\",\n  ITEM: \"item\",\n  STATUS: \"status\",\n  UNTYPED: \"untyped\",\n});\n\nclass PF2Modifier {\n  name;\n\n  modifier;\n\n  type;\n\n  enabled;\n\n  source;\n\n  notes;\n\n  ignored;\n\n  custom;\n\n  damageType;\n\n  predicate;\n\n  critical;\n\n  traits;\n\n  /**\n   * Create a new modifier.\n   * @param {string} name The name for the modifier; should generally be a localization key.\n   * @param {number} modifier The actual numeric benefit/penalty that this modifier provides.\n   * @param {string} type The type of the modifier - modifiers of the same type do not stack (except for `untyped` modifiers).\n   * @param {boolean} enabled If true, this modifier will be applied to the result; otherwise, it will not.\n   * @param {string} source The source which this modifier originates from, if any.\n   * @param {string} notes Any notes about this modifier.\n   */\n  constructor(name, modifier, type, enabled = true, source = undefined, notes = undefined) {\n    this.name = name;\n    this.modifier = modifier;\n    this.type = type;\n    this.enabled = enabled;\n    this.ignored = false;\n    this.custom = false;\n    if (source) this.source = source;\n    if (notes) this.notes = notes;\n  }\n}\n\nlet UNTRAINED = {};\nlet TRAINED = {};\nlet EXPERT = {};\nlet MASTER = {};\nlet LEGENDARY = {};\n\nexport function initModifiers(actorData) {\n  UNTRAINED = {\n    atLevel: (level) => {\n      const modifier = actorData.flags?.externalactor?.proficiencyUntrainedModifier ?? 0;\n      return new PF2Modifier(\"PF2E.ProficiencyLevel0\", modifier, PF2ModifierType.PROFICIENCY);\n    },\n  };\n\n  TRAINED = {\n    atLevel: (level) => {\n      const rule = actorData.flags?.externalactor?.proficiencyVariant ?? \"ProficiencyWithLevel\";\n      let modifier = actorData.flags?.externalactor?.proficiencyTrainedModifier ?? 2;\n      if (rule === \"ProficiencyWithLevel\") {\n        modifier += level;\n      }\n      return new PF2Modifier(\"PF2E.ProficiencyLevel1\", modifier, PF2ModifierType.PROFICIENCY);\n    },\n  };\n\n  EXPERT = {\n    atLevel: (level) => {\n      const rule = actorData.flags?.externalactor?.proficiencyVariant ?? \"ProficiencyWithLevel\";\n      let modifier = actorData.flags?.externalactor?.proficiencyExpertModifier ?? 4;\n      if (rule === \"ProficiencyWithLevel\") {\n        modifier += level;\n      }\n      return new PF2Modifier(\"PF2E.ProficiencyLevel2\", modifier, PF2ModifierType.PROFICIENCY);\n    },\n  };\n\n  MASTER = {\n    atLevel: (level) => {\n      const rule = actorData.flags?.externalactor?.proficiencyVariant ?? \"ProficiencyWithLevel\";\n      let modifier = actorData.flags?.externalactor?.proficiencyMasterModifier ?? 6;\n      if (rule === \"ProficiencyWithLevel\") {\n        modifier += level;\n      }\n      return new PF2Modifier(\"PF2E.ProficiencyLevel3\", modifier, PF2ModifierType.PROFICIENCY);\n    },\n  };\n\n  LEGENDARY = {\n    atLevel: (level) => {\n      const rule = actorData.flags?.externalactor?.proficiencyVariant ?? \"ProficiencyWithLevel\";\n      let modifier = actorData.flags?.externalactor?.proficiencyLegendaryModifier ?? 8;\n      if (rule === \"ProficiencyWithLevel\") {\n        modifier += level;\n      }\n      return new PF2Modifier(\"PF2E.ProficiencyLevel4\", modifier, PF2ModifierType.PROFICIENCY);\n    },\n  };\n}\n\nexport const ProficiencyModifier = Object.freeze({\n  fromLevelAndRank: (level, rank) => {\n    switch (rank || 0) {\n      case 0:\n        return UNTRAINED.atLevel(level);\n      case 1:\n        return TRAINED.atLevel(level);\n      case 2:\n        return EXPERT.atLevel(level);\n      case 3:\n        return MASTER.atLevel(level);\n      case 4:\n        return LEGENDARY.atLevel(level);\n      default:\n        throw new RangeError(`invalid proficiency rank: ${rank}`);\n    }\n  },\n});\n","export class ConditionManager {\n  static getFlattenedConditions(items) {\n    const conditions = new Map();\n\n    items\n      .sort((a, b) => ConditionManager.__sortCondition(a, b))\n      .forEach((c) => {\n        // Sorted list of conditions.\n        // First by active, then by base (lexicographically), then by value (descending).\n\n        let name = `${c.data.base}`;\n        let condition;\n\n        if (c.data.value.isValued) {\n          name = `${name} ${c.data.value.value}`;\n        }\n\n        if (conditions.has(name)) {\n          // Have already seen condition\n          condition = conditions.get(name);\n        } else {\n          // Have not seen condition\n          condition = {\n            id: c._id,\n            active: c.data.active,\n            name: name, // eslint-disable-line object-shorthand\n            value: c.data.value.isValued ? c.data.value.value : undefined,\n            description: c.data.description.value,\n            img: c.img,\n            references: false,\n            parents: [],\n            children: [],\n            overrides: [],\n            overriddenBy: [],\n            immunityFrom: [],\n          };\n\n          conditions.set(name, condition);\n        }\n\n        // Update any references\n        if (c.data.references.parent) {\n          const refCondition = items.find((i) => i._id === c.data.references.parent.id);\n\n          if (refCondition) {\n            const ref = {\n              id: c.data.references.parent,\n              name: refCondition.name,\n              base: refCondition.data.base,\n              text: \"\",\n            };\n\n            if (refCondition.data.value.isValued) {\n              ref.name = `${ref.name} ${refCondition.data.value.value}`;\n            }\n\n            ref.text = `@Compendium[pf2e.conditionitems.${refCondition.data.base}]{${ref.name}}`;\n\n            condition.references = true;\n            condition.parents.push(ref);\n          }\n        }\n\n        c.data.references.children.forEach((item) => {\n          const refCondition = items.find((i) => i._id === item.id);\n\n          if (refCondition) {\n            const ref = {\n              id: c.data.references.parent,\n              name: refCondition.name,\n              base: refCondition.data.base,\n              text: \"\",\n            };\n\n            if (refCondition.data.value.isValued) {\n              ref.name = `${ref.name} ${refCondition.data.value.value}`;\n            }\n\n            ref.text = `@Compendium[pf2e.conditionitems.${refCondition.data.base}]{${ref.name}}`;\n\n            condition.references = true;\n            condition.children.push(ref);\n          }\n        });\n\n        c.data.references.overrides.forEach((item) => {\n          const refCondition = items.find((i) => i._id === item.id);\n\n          if (refCondition) {\n            const ref = {\n              id: c.data.references.parent,\n              name: refCondition.name,\n              base: refCondition.data.base,\n              text: \"\",\n            };\n\n            if (refCondition.data.value.isValued) {\n              ref.name = `${ref.name} ${refCondition.data.value.value}`;\n            }\n\n            ref.text = `@Compendium[pf2e.conditionitems.${refCondition.data.base}]{${ref.name}}`;\n\n            condition.references = true;\n            condition.overrides.push(ref);\n          }\n        });\n\n        c.data.references.overriddenBy.forEach((item) => {\n          const refCondition = items.find((i) => i._id === item.id);\n\n          if (refCondition) {\n            const ref = {\n              id: c.data.references.parent,\n              name: refCondition.name,\n              base: refCondition.data.base,\n              text: \"\",\n            };\n\n            if (refCondition.data.value.isValued) {\n              ref.name = `${ref.name} ${refCondition.data.value.value}`;\n            }\n\n            ref.text = `@Compendium[pf2e.conditionitems.${refCondition.data.base}]{${ref.name}}`;\n\n            condition.references = true;\n            condition.overriddenBy.push(ref);\n          }\n        });\n\n        c.data.references.immunityFrom.forEach((item) => {\n          const refCondition = items.find((i) => i._id === item.id);\n\n          if (refCondition) {\n            const ref = {\n              id: c.data.references.parent,\n              name: refCondition.name,\n              base: refCondition.data.base,\n              text: \"\",\n            };\n\n            if (refCondition.data.value.isValued) {\n              ref.name = `${ref.name} ${refCondition.data.value.value}`;\n            }\n\n            ref.text = `@Compendium[pf2e.conditionitems.${refCondition.data.base}]{${ref.name}}`;\n\n            condition.references = true;\n            condition.immunityFrom.push(ref);\n          }\n        });\n      });\n\n    return Array.from(conditions.values());\n  }\n\n  static __sortCondition(a, b) {\n    if (a.data.active === b.data.active) {\n      // Both are active or both inactive.\n\n      if (a.data.base === b.data.base) {\n        // Both are same base\n\n        if (a.data.value.isValued) {\n          // Valued condition\n          // Sort values by descending order.\n          return b.data.value.value - a.data.value.value;\n        } else {\n          // Not valued condition\n          return 0;\n        }\n      } else {\n        // Different bases\n        return a.data.base.localeCompare(b.data.base);\n      }\n    } else if (a.data.active && !b.data.active) {\n      // A is active, B is not\n      // A should be before B.\n      return -1;\n    } else if (!a.data.active && b.data.active) {\n      // B is active, A is not\n      // Be should be before A.\n      return 1;\n    }\n\n    return 0;\n  }\n}\n","import { groupBy } from \"./container\";\n\nexport class Bulk {\n  normal;\n\n  light;\n\n  constructor({ normal = 0, light = 0 } = {}) {\n    this.normal = normal + Math.floor(light / 10);\n    this.light = light % 10;\n  }\n\n  get isNegligible() {\n    return this.normal === 0 && this.light === 0;\n  }\n\n  get isLight() {\n    return this.toLightBulk() < 10 && !this.isNegligible;\n  }\n\n  toLightBulk() {\n    return this.normal * 10 + this.light;\n  }\n\n  plus(bulk) {\n    return new Bulk({\n      normal: this.normal + bulk.normal,\n      light: this.light + bulk.light,\n    });\n  }\n\n  minus(bulk) {\n    // 1 bulk is 10 light bulk\n    const [thisBulk, otherBulk] = this._toSingleNumber(bulk);\n    const result = thisBulk - otherBulk;\n\n    // bulk can't get negative\n    if (result < 0) {\n      return new Bulk();\n    }\n    return new Bulk({\n      normal: Math.floor(result / 10),\n      light: result % 10,\n    });\n  }\n\n  _toSingleNumber(bulk) {\n    return [this.normal * 10 + this.light, bulk.normal * 10 + bulk.light];\n  }\n\n  times(factor) {\n    return new Bulk({\n      normal: this.normal * factor,\n      light: this.light * factor,\n    });\n  }\n\n  isSmallerThan(bulk) {\n    const [thisBulk, otherBulk] = this._toSingleNumber(bulk);\n    return thisBulk < otherBulk;\n  }\n\n  isBiggerThan(bulk) {\n    const [thisBulk, otherBulk] = this._toSingleNumber(bulk);\n    return thisBulk > otherBulk;\n  }\n\n  isEqualTo(bulk) {\n    return this.normal === bulk.normal && this.light === bulk.light;\n  }\n\n  isPositive() {\n    return this.normal > 0 || this.light > 0;\n  }\n\n  toString() {\n    return `normal: ${this.normal}; light: ${this.light}`;\n  }\n}\n\nexport const defaultBulkConfig = {\n  ignoreCoinBulk: false,\n  ignoreContainerOverflow: false,\n};\n\nexport function calculateBulk(items, stackDefinitions, nestedExtraDimensionalContainer = false, bulkConfig = defaultBulkConfig) {\n  const inventory = new BulkItem({\n    holdsItems: items,\n  });\n  return calculateCombinedBulk(inventory, stackDefinitions, nestedExtraDimensionalContainer, bulkConfig);\n}\n\nconst lightBulkRegex = /^(\\d*)l$/i;\nconst complexBulkRegex = /^(\\d+);\\s*(\\d*)l$/i;\n\nexport function weightToBulk(weight) {\n  if (weight === undefined || weight === null) {\n    return undefined;\n  }\n  const trimmed = weight.trim();\n  if (/^\\d+$/.test(trimmed)) {\n    return new Bulk({ normal: parseInt(trimmed, 10) });\n  }\n  const lightMatch = trimmed.match(lightBulkRegex);\n  if (lightMatch) {\n    return new Bulk({ light: parseInt(lightMatch[1] || \"1\", 10) });\n  }\n  const complexMatch = trimmed.match(complexBulkRegex);\n  if (complexMatch) {\n    const [, normal, light] = complexMatch;\n    return new Bulk({\n      normal: parseInt(normal, 10),\n      light: parseInt(light || \"1\", 10),\n    });\n  }\n  return undefined;\n}\n\nexport function formatBulk(bulk) {\n  if (bulk.normal === 0 && bulk.light === 0) {\n    return \"-\";\n  }\n  if (bulk.normal > 0 && bulk.light === 0) {\n    return `${bulk.normal}`;\n  }\n  if (bulk.light === 1 && bulk.normal === 0) {\n    return `L`;\n  }\n  if (bulk.light > 0 && bulk.normal === 0) {\n    return `${bulk.light}L`;\n  }\n  return `${bulk.normal}; ${bulk.light}L`;\n}\n\nexport class BulkItem {\n  id;\n\n  bulk;\n\n  quantity;\n\n  stackGroup;\n\n  isEquipped;\n\n  unequippedBulk;\n\n  equippedBulk;\n\n  holdsItems;\n\n  negateBulk;\n\n  extraDimensionalContainer;\n\n  constructor({\n    id = \"\",\n    bulk = new Bulk(),\n    quantity = 1,\n    stackGroup = undefined,\n    isEquipped = false,\n    // value to overrides bulk field when unequipped\n    unequippedBulk = undefined,\n    // value to overrides bulk field when equipped\n    equippedBulk = undefined,\n    holdsItems = [],\n    // some containers like a backpack or back of holding reduce total bulk if\n    // items are put into it\n    negateBulk = new Bulk(),\n    // extra dimensional containers cease to work when nested inside each other\n    extraDimensionalContainer = false,\n  } = {}) {\n    this.id = id;\n    this.bulk = bulk;\n    this.quantity = quantity;\n    this.stackGroup = stackGroup;\n    this.holdsItems = holdsItems;\n    this.negateBulk = negateBulk;\n    this.unequippedBulk = unequippedBulk;\n    this.equippedBulk = equippedBulk;\n    this.isEquipped = isEquipped;\n    this.extraDimensionalContainer = extraDimensionalContainer;\n  }\n\n  get reducesBulk() {\n    return !this.negateBulk.isNegligible;\n  }\n}\n\nfunction calculateCombinedBulk(item, stackDefinitions, nestedExtraDimensionalContainer = false, bulkConfig = defaultBulkConfig) {\n  const [mainBulk, mainOverflow] = calculateItemBulk(item, stackDefinitions, bulkConfig);\n  const [childBulk, childOverflow] = item.holdsItems\n    .map((child) => calculateCombinedBulk(child, stackDefinitions, item.extraDimensionalContainer, bulkConfig))\n    .reduce(combineBulkAndOverflow, [new Bulk(), {}]);\n\n  // combine item overflow and child overflow\n  const combinedOverflow = combineObjects(mainOverflow, calculateChildOverflow(childOverflow, item, bulkConfig.ignoreContainerOverflow), add);\n  const [overflowBulk, remainingOverflow] = calculateStackBulk(combinedOverflow, stackDefinitions, bulkConfig);\n  return [mainBulk.plus(reduceNestedItemBulk(childBulk, item, nestedExtraDimensionalContainer)).plus(overflowBulk), remainingOverflow];\n}\n\nfunction calculateItemBulk(item, stackDefinitions, bulkConfig) {\n  const stackName = item.stackGroup;\n  if (isBlank(stackName)) {\n    return [calculateNonStackBulk(item).times(item.quantity), {}];\n  }\n  return calculateStackBulk({ [stackName]: item.quantity }, stackDefinitions, bulkConfig);\n}\n\nfunction combineObjects(first, second, mergeFunction) {\n  const combinedKeys = new Set([...Object.keys(first), ...Object.keys(second)]);\n\n  const combinedObject = {};\n  for (const name of combinedKeys) {\n    if (name in first && name in second) {\n      combinedObject[name] = mergeFunction(first[name], second[name]);\n    } else if (name in first) {\n      combinedObject[name] = first[name];\n    } else if (name in second) {\n      combinedObject[name] = second[name];\n    }\n  }\n  return combinedObject;\n}\n\nfunction calculateChildOverflow(overflow, item, ignoreContainerOverflow) {\n  if (item.extraDimensionalContainer || ignoreContainerOverflow) {\n    return {};\n  }\n  return overflow;\n}\n\nfunction calculateNonStackBulk(item) {\n  if (item.unequippedBulk !== undefined && item.unequippedBulk !== null && !item.isEquipped) {\n    return item.unequippedBulk;\n  }\n  if (item.equippedBulk !== undefined && item.equippedBulk !== null && item.isEquipped) {\n    return item.equippedBulk;\n  }\n  return item.bulk;\n}\n\nfunction calculateStackBulk(itemStacks, stackDefinitions, bulkConfig = defaultBulkConfig) {\n  return Object.entries(itemStacks)\n    .filter(([stackType]) => !(bulkConfig.ignoreCoinBulk && stackType === \"coins\"))\n    .map(([stackType, quantity]) => {\n      if (!(stackType in stackDefinitions)) {\n        throw new Error(`No stack definition found for stack ${stackType}`);\n      }\n      const { size, lightBulk } = stackDefinitions[stackType];\n      const bulkRelevantQuantity = Math.floor(quantity / size);\n      const itemBulk = new Bulk({ light: bulkRelevantQuantity * lightBulk });\n      const overflow = { [stackType]: quantity % size };\n      const result = [itemBulk, overflow];\n      return result;\n    })\n    .reduce(combineBulkAndOverflow, [new Bulk(), {}]);\n}\n\nfunction reduceNestedItemBulk(bulk, item, nestedExtraDimensionalContainer) {\n  if (isExtraDimensionalOrWorn(item, nestedExtraDimensionalContainer)) {\n    return bulk.minus(item.negateBulk);\n  }\n  return bulk;\n}\n\nfunction add(x, y) {\n  return x + y;\n}\n\nfunction isBlank(string) {\n  return string === null || string === undefined || string.trim() === \"\";\n}\n\nfunction combineBulkAndOverflow(first, second) {\n  const [firstBulk, firstOverflow] = first;\n  const [secondBulk, secondOverflow] = second;\n  return [firstBulk.plus(secondBulk), combineObjects(firstOverflow, secondOverflow, add)];\n}\n\nfunction isExtraDimensionalOrWorn(item, nestedExtraDimensionalContainer) {\n  return (item.extraDimensionalContainer && !nestedExtraDimensionalContainer) || (item.reducesBulk && item.isEquipped);\n}\n\nexport function indexBulkItemsById(bulkItems = []) {\n  const result = new Map();\n  bulkItems.forEach((bulkItem) => fillBulkIndex(bulkItem, result));\n  return result;\n}\n\nfunction fillBulkIndex(bulkItem, resultMap) {\n  resultMap.set(bulkItem.id, bulkItem);\n  bulkItem.holdsItems.forEach((heldBulkItem) => fillBulkIndex(heldBulkItem, resultMap));\n}\n\nexport function itemsFromActorData(actorData) {\n  return toBulkItems(actorData.items.filter(isPhysicalItem));\n}\n\nfunction toBulkItems(items) {\n  const allIds = new Set(items.map((item) => item._id));\n  const itemsInContainers = groupBy(items, (item) => {\n    // we want all items in the top level group that are in no container\n    // or are never referenced because we don't want the items to\n    // disappear if the container is being deleted or doesn't have a reference\n    const ref = item.data?.containerId?.value ?? null;\n    if (ref === null || !allIds.has(ref)) {\n      return null;\n    }\n    return ref;\n  });\n  if (itemsInContainers.has(null)) {\n    const topLevelItems = itemsInContainers.get(null);\n    return buildContainerTree(topLevelItems, itemsInContainers);\n  }\n  return [];\n}\n\nfunction buildContainerTree(items, groupedItems) {\n  return items.map((item) => {\n    const itemId = item._id;\n    if (itemId !== null && itemId !== undefined && groupedItems.has(itemId)) {\n      const itemsInContainer = buildContainerTree(groupedItems.get(itemId), groupedItems);\n      return toBulkItem(item, itemsInContainer);\n    }\n    return toBulkItem(item);\n  });\n}\n\nfunction toBulkItem(item, nestedItems = []) {\n  const id = item._id;\n  const weight = item.data?.weight?.value;\n  const quantity = item.data?.quantity?.value ?? 0;\n  const isEquipped = item.data?.equipped?.value ?? false;\n  const equippedBulk = item.data?.equippedBulk?.value;\n  const unequippedBulk = item.data?.unequippedBulk?.value;\n  const stackGroup = item.data?.stackGroup?.value;\n  const negateBulk = item.data?.negateBulk?.value;\n  const extraDimensionalContainer = item.data?.traits?.value?.includes(\"extradimensional\") ?? false;\n\n  return new BulkItem({\n    id,\n    bulk: weightToBulk(normalizeWeight(weight)) ?? new Bulk(),\n    negateBulk: weightToBulk(normalizeWeight(negateBulk)) ?? new Bulk(),\n    // this stuff overrides bulk so we don't want to default to 0 bulk if undefined\n    unequippedBulk: weightToBulk(normalizeWeight(unequippedBulk)),\n    equippedBulk: weightToBulk(normalizeWeight(equippedBulk)),\n    holdsItems: nestedItems,\n    stackGroup,\n    isEquipped,\n    quantity,\n    extraDimensionalContainer,\n  });\n}\n\nfunction normalizeWeight(weight) {\n  if (weight === null || weight === undefined) {\n    return undefined;\n  }\n  // turn numbers into strings\n  const stringWeight = `${weight}`;\n  return stringWeight.toLowerCase().trim();\n}\n\nfunction isPhysicalItem(item) {\n  return \"data\" in item && \"quantity\" in item.data;\n}\n\nexport const stacks = {\n  bolts: {\n    size: 10,\n    lightBulk: 1,\n  },\n  arrows: {\n    size: 10,\n    lightBulk: 1,\n  },\n  slingBullets: {\n    size: 10,\n    lightBulk: 1,\n  },\n  blowgunDarts: {\n    size: 10,\n    lightBulk: 1,\n  },\n  rations: {\n    size: 7,\n    lightBulk: 1,\n  },\n  coins: {\n    size: 1000,\n    lightBulk: 10,\n  },\n  gems: {\n    size: 2000,\n    lightBulk: 10,\n  },\n};\n\nexport const bulkConversions = {\n  Tiny: {\n    bulkLimitFactor: 0.5,\n    treatsAsLight: \"-\",\n    treatsAsNegligible: null,\n  },\n  Small: {\n    bulkLimitFactor: 1,\n    treatsAsLight: \"L\",\n    treatsAsNegligible: \"-\",\n  },\n  Medium: {\n    bulkLimitFactor: 1,\n    treatsAsLight: \"L\",\n    treatsAsNegligible: \"-\",\n  },\n  Large: {\n    bulkLimitFactor: 2,\n    treatsAsLight: \"1\",\n    treatsAsNegligible: \"L\",\n  },\n  Huge: {\n    bulkLimitFactor: 4,\n    treatsAsLight: \"2\",\n    treatsAsNegligible: \"1\",\n  },\n  Gargantuan: {\n    bulkLimitFactor: 8,\n    treatsAsLight: \"4\",\n    treatsAsNegligible: \"2\",\n  },\n};\n","import {\n  Bulk,\n  calculateBulk,\n  defaultBulkConfig,\n  formatBulk,\n  weightToBulk,\n} from './bulk';\n\n\nclass ContainerData {\n  item;\n  heldItems;\n  negateBulk;\n  heldItemBulk;\n  isInContainer;\n  formattedHeldItemBulk;\n  formattedNegateBulk;\n  formattedCapacity;\n  capacity;\n\n  constructor({ item, heldItems, negateBulk, capacity, heldItemBulk, isInContainer, formattedNegateBulk, formattedHeldItemBulk, formattedCapacity }) {\n    this.item = item;\n    this.heldItems = heldItems;\n    this.negateBulk = negateBulk;\n    this.heldItemBulk = heldItemBulk;\n    this.isInContainer = isInContainer;\n    this.formattedHeldItemBulk = formattedHeldItemBulk;\n    this.formattedNegateBulk = formattedNegateBulk;\n    this.formattedCapacity = formattedCapacity;\n    this.capacity = capacity;\n  }\n\n  get isContainer() {\n    return !this.capacity.isNegligible;\n  }\n\n  get isCollapsed() {\n    return this.item?.data?.collapsed?.value ?? false;\n  }\n\n  get isNotInContainer() {\n    return !this.isInContainer;\n  }\n\n  _getLightBulkCapacityThreshold() {\n    if (this.capacity.normal > 0) {\n      // light bulk don't count towards bulk limit\n      return this.capacity.toLightBulk() + 10;\n    }\n    // but do if the container only stores light bulk\n    return this.capacity.light;\n  }\n\n  get fullPercentage() {\n    const capacity = this._getLightBulkCapacityThreshold();\n    if (capacity === 0) {\n      return 0;\n    }\n    const heldLightBulk = this.heldItemBulk.toLightBulk();\n    return Math.floor((heldLightBulk / capacity) * 100);\n  }\n\n  get fullPercentageMax100() {\n    const percentage = this.fullPercentage;\n    if (percentage > 100) {\n      return 100;\n    }\n    return percentage;\n  }\n\n  get isOverLoaded() {\n    if (this.capacity.normal > 0) {\n      return this.heldItemBulk.toLightBulk() >= this.capacity.toLightBulk() + 10;\n    }\n    return this.heldItemBulk.toLightBulk() > this.capacity.light;\n  }\n}\n\nexport function getContainerMap(items = [], bulkItemsById = new Map(), stackDefinitions, bulkConfig = defaultBulkConfig) {\n  const allIds = groupBy(items, (item) => item._id);\n\n  const containerGroups = groupBy(items, (item) => {\n    const containerId = item?.data?.containerId?.value;\n    if (allIds.has(containerId)) {\n      return containerId;\n    }\n    return null;\n  });\n\n  const idIndexedContainerData = new Map();\n  for (const item of items) {\n    const isInContainer = containerGroups.has(item?.data?.containerId?.value);\n    const heldItems = containerGroups.get(item._id) || [];\n\n    idIndexedContainerData.set(\n      item._id,\n      toContainer(allIds.get(item._id)[0], heldItems, bulkItemsById.get(item._id)?.holdsItems ?? [], isInContainer, stackDefinitions, bulkConfig)\n    );\n  }\n\n  return idIndexedContainerData;\n}\n\n/* -------------------------------------------- */\n\nexport function groupBy(array, criterion) {\n  const result = new Map();\n  for (const elem of array) {\n    const key = criterion(elem);\n    if (result.get(key) === undefined) {\n      result.set(key, [elem]);\n    } else {\n      result.get(key).push(elem);\n    }\n  }\n  return result;\n}\n\n/* -------------------------------------------- */\n\nfunction toContainer(item, heldItems = [], heldBulkItems = [], isInContainer, stackDefinitions, bulkConfig) {\n  const negateBulk = weightToBulk(item.data?.negateBulk?.value) ?? new Bulk();\n  const [heldItemBulk] = calculateBulk(heldBulkItems, stackDefinitions, false, bulkConfig);\n  const capacity = weightToBulk(item.data?.bulkCapacity?.value) ?? new Bulk();\n  return new ContainerData({\n    item,\n    heldItems,\n    negateBulk,\n    capacity,\n    heldItemBulk,\n    isInContainer,\n    formattedNegateBulk: formatBulk(negateBulk),\n    formattedHeldItemBulk: formatBulk(heldItemBulk),\n    formattedCapacity: formatBulk(capacity),\n  });\n}\n","import { bulkConversions } from \"./bulk\";\n\nclass InventoryWeight {\n  combinedBulk;\n\n  encumberedAt;\n\n  limit;\n\n  constructor(combinedBulk, encumberedAt, limit) {\n    this.combinedBulk = combinedBulk;\n    this.encumberedAt = encumberedAt;\n    this.limit = limit;\n  }\n\n  get encumberedPercentage() {\n    const totalTimes10 = this.combinedBulk.toLightBulk();\n    const encumberedAtTimes10 = this.encumberedAt * 10 + 10;\n    return Math.floor((totalTimes10 / encumberedAtTimes10) * 100);\n  }\n\n  get limitPercentage() {\n    const totalTimes10 = this.combinedBulk.toLightBulk();\n    const limitTimes10 = this.limit * 10 + 10;\n    return Math.floor((totalTimes10 / limitTimes10) * 100);\n  }\n\n  get limitPercentageMax100() {\n    if (this.limitPercentage > 100) {\n      return 100;\n    }\n    return this.limitPercentage;\n  }\n\n  get isEncumbered() {\n    return this.combinedBulk.normal > this.encumberedAt;\n  }\n\n  get isOverLimit() {\n    return this.combinedBulk.normal > this.limit;\n  }\n\n  get bulk() {\n    return this.combinedBulk.normal;\n  }\n}\n\nexport function calculateEncumbrance(strengthModifier, bonusBulkEncumbrance, bonusBulkLimit, combinedBulk, actorSize = \"Medium\") {\n  const bulkFactor = bulkConversions[actorSize].bulkLimitFactor;\n  const encumberedAt = Math.floor((strengthModifier + bonusBulkEncumbrance + 5) * bulkFactor);\n  const limit = Math.floor((strengthModifier + bonusBulkLimit + 10) * bulkFactor);\n  return new InventoryWeight(combinedBulk, encumberedAt, limit);\n}\n","import localize from \"../handlebars/helpers/stringify\";\nimport { ProficiencyModifier } from \"./modifiers\";\n\nexport const ChatData = {\n  armorChatData(item) {\n    const data = JSON.parse(JSON.stringify(item.data));\n    const properties = [\n      PF2E.armorTypes[data.armorType.value],\n      PF2E.armorGroups[data.group.value],\n      `${addSign(getArmorBonus(data))} ${localize(\"PF2E.ArmorArmorLabel\")}`,\n      `${data.dex.value || 0} ${localize(\"PF2E.ArmorDexLabel\")}`,\n      `${data.check.value || 0} ${localize(\"PF2E.ArmorCheckLabel\")}`,\n      `${data.speed.value || 0} ${localize(\"PF2E.ArmorSpeedLabel\")}`,\n      data.traits.value,\n      data.equipped.value ? localize(\"PF2E.ArmorEquippedLabel\") : null,\n    ];\n    data.properties = properties.filter((p) => p !== null);\n\n    data.traits = null;\n    return data;\n  },\n\n  /* -------------------------------------------- */\n\n  equipmentChatData(item) {\n    const data = JSON.parse(JSON.stringify(item.data));\n    const properties = [data.equipped.value ? localize(\"PF2E.EquipmentEquippedLabel\") : null];\n    data.properties = properties.filter((p) => p !== null);\n    return data;\n  },\n\n  /* -------------------------------------------- */\n\n  weaponChatData(item, actorData) {\n    const data = JSON.parse(JSON.stringify(item.data));\n    actorData = actorData.data;\n    const traits = [];\n    const itemTraits = data.traits.value;\n    let twohandedTrait = false;\n    const twohandedRegex = \"(\\\\btwo-hand\\\\b)-(d\\\\d+)\";\n\n    if (item.type !== \"weapon\") {\n      throw new Error(\"tried to create a weapon chat data for a non-weapon item\");\n    }\n\n    if ((data.traits.value || []).length !== 0) {\n      for (let i = 0; i < data.traits.value.length; i++) {\n        const traitsObject = {\n          label: PF2E.weaponTraits[data.traits.value[i]] || data.traits.value[i].charAt(0).toUpperCase() + data.traits.value[i].slice(1),\n          description: PF2E.traitsDescriptions[data.traits.value[i]] || \"\",\n        };\n        traits.push(traitsObject);\n\n        // Check if two-handed trait is present\n        if (itemTraits[i].match(twohandedRegex)) {\n          twohandedTrait = true;\n        }\n      }\n    }\n\n    // calculate attackRoll modifier (for _onItemSummary)\n    const isFinesse = (data.traits.value || []).includes(\"finesse\");\n    const abl = isFinesse && actorData.abilities.dex.mod > actorData.abilities.str.mod ? \"dex\" : data.ability.value || \"str\";\n\n    const prof = data.weaponType.value || \"simple\";\n    // if a default martial proficiency then lookup the martial value, else find the martialSkill item and get the value from there.\n    const proficiency = {\n      type: \"default\",\n      value: 0,\n    };\n    if (Object.keys(PF2E.weaponTypes).includes(prof)) {\n      proficiency.type = \"martial\";\n      proficiency.value = actorData.martial?.[prof]?.value || 0;\n    } else {\n      try {\n        const martialSkill = actorData.items.find((item) => item._id === prof);\n        if (martialSkill.type === \"martial\") {\n          proficiency.type = \"skill\";\n          const rank = martialSkill.data.proficient?.value || 0;\n          proficiency.value = ProficiencyModifier.fromLevelAndRank(actorData.details.level.value, rank).modifier;\n        }\n      } catch (err) {\n        console.log(`PF2E | Could not find martial skill for ${prof}`);\n      }\n    }\n    data.proficiency = proficiency;\n    data.attackRoll = getAttackBonus(data) + (actorData.abilities?.[abl]?.mod ?? 0) + proficiency.value;\n\n    const properties = [];\n\n    if (data.group.value) {\n      data.critSpecialization = {\n        label: PF2E.weaponGroups[data.group.value],\n        description: PF2E.weaponDescriptions[data.group.value],\n      };\n    }\n\n    data.isTwohanded = !!twohandedTrait;\n    data.wieldedTwoHands = !!data.hands.value;\n    data.isFinesse = isFinesse;\n    data.properties = properties.filter((p) => !!p);\n    data.traits = traits.filter((p) => !!p);\n\n    const map = calculateMap(item);\n    data.map2 = map.map2;\n    data.map3 = map.map3;\n    return data;\n  },\n\n  /* -------------------------------------------- */\n\n  meleeChatData(item) {\n    const data = JSON.parse(JSON.stringify(item.data));\n    const traits = [];\n\n    if ((data.traits.value || []).length !== 0) {\n      for (let i = 0; i < data.traits.value.length; i++) {\n        const traitsObject = {\n          label: PF2E.weaponTraits[data.traits.value[i]] || data.traits.value[i].charAt(0).toUpperCase() + data.traits.value[i].slice(1),\n          description: PF2E.traitsDescriptions[data.traits.value[i]] || \"\",\n        };\n        traits.push(traitsObject);\n      }\n    }\n\n    const isAgile = (data.traits.value || []).includes(\"agile\");\n    data.map2 = isAgile ? \"-4\" : \"-5\";\n    data.map3 = isAgile ? \"-8\" : \"-10\";\n    data.traits = traits.filter((p) => !!p);\n    return data;\n  },\n\n  /* -------------------------------------------- */\n\n  consumableChatData(item) {\n    const data = JSON.parse(JSON.stringify(item.data));\n    data.consumableType.str = PF2E.consumableTypes[data.consumableType.value];\n    data.properties = [data.consumableType.str, `${data.charges.value}/${data.charges.max} ${localize(\"PF2E.ConsumableChargesLabel\")}`];\n    data.hasCharges = data.charges.value >= 0;\n    return data;\n  },\n\n  /* -------------------------------------------- */\n\n  treasureChatData(item) {\n    const data = JSON.parse(JSON.stringify(item.data));\n    return data;\n  },\n\n  /* -------------------------------------------- */\n\n  toolChatData(item, actorData) {\n    const data = JSON.parse(JSON.stringify(item.data));\n    const abl = actorData.data.abilities[data.ability.value].label;\n    const prof = data.proficient.value || 0;\n    const properties = [abl, PF2E.proficiencyLevels[prof]];\n    data.properties = properties.filter((p) => p !== null);\n    return data;\n  },\n\n  /* -------------------------------------------- */\n\n  loreChatData(item, actorData) {\n    const data = JSON.parse(JSON.stringify(item.data));\n    if (actorData.type !== \"npc\") {\n      const abl = actorData.data.abilities[data.ability.value].label;\n      const prof = data.proficient.value || 0;\n      const properties = [abl, PF2E.proficiencyLevels[prof]];\n      data.properties = properties.filter((p) => p !== null);\n    }\n    return data;\n  },\n\n  /* -------------------------------------------- */\n\n  backpackChatData(item) {\n    const data = JSON.parse(JSON.stringify(item.data));\n    data.properties = [];\n    return data;\n  },\n\n  /* -------------------------------------------- */\n\n  spellChatData(item, actorData) {\n    const data = JSON.parse(JSON.stringify(item.data));\n\n    const spellcastingEntry = actorData.items.find((item) => item._id === data.location.value);\n\n    if (spellcastingEntry === null || spellcastingEntry.type !== \"spellcastingEntry\") return {};\n\n    const spellDC = spellcastingEntry.data.spelldc.dc;\n    const spellAttack = spellcastingEntry.data.spelldc.value;\n\n    // Spell saving throw text and DC\n    data.isSave = data.spellType.value === \"save\";\n\n    if (data.isSave) {\n      data.save.dc = spellDC;\n    } else data.save.dc = spellAttack;\n    data.save.str = data.save.value ? PF2E.saves[data.save.value.toLowerCase()] : \"\";\n\n    // Spell attack labels\n    data.damageLabel = data.spellType.value === \"heal\" ? localize(\"PF2E.SpellTypeHeal\") : localize(\"PF2E.DamageLabel\");\n    data.isAttack = data.spellType.value === \"attack\";\n\n    // Combine properties\n    const props = [\n      PF2E.spellLevels[data.level.value],\n      `${localize(\"PF2E.SpellComponentsLabel\")}: ${data.components.value}`,\n      data.range.value ? `${localize(\"PF2E.SpellRangeLabel\")}: ${data.range.value}` : null,\n      data.target.value ? `${localize(\"PF2E.SpellTargetLabel\")}: ${data.target.value}` : null,\n      data.area.value ? `${localize(\"PF2E.SpellAreaLabel\")}: ${PF2E.areaSizes[data.area.value]} ${PF2E.areaTypes[data.area.areaType]}` : null,\n      data.areasize?.value ? `${localize(\"PF2E.SpellAreaLabel\")}: ${data.areasize.value}` : null,\n      data.time.value ? `${localize(\"PF2E.SpellTimeLabel\")}: ${data.time.value}` : null,\n      data.duration.value ? `${localize(\"PF2E.SpellDurationLabel\")}: ${data.duration.value}` : null,\n    ];\n    data.spellLvl = {}.spellLvl;\n    if (data.level.value < parseInt(data.spellLvl, 10)) {\n      props.push(`Heightened: +${parseInt(data.spellLvl, 10) - data.level.value}`);\n    }\n    data.properties = props.filter((p) => p !== null);\n\n    const traits = [];\n    if ((data.traits.value || []).length !== 0) {\n      for (let i = 0; i < data.traits.value.length; i++) {\n        const traitsObject = {\n          label: data.traits.value[i].charAt(0).toUpperCase() + data.traits.value[i].substr(1),\n          description: PF2E.traitsDescriptions[data.traits.value[i]] || \"\",\n        };\n        traits.push(traitsObject);\n      }\n    }\n    data.traits = traits.filter((p) => p);\n\n    return data;\n  },\n\n  /* -------------------------------------------- */\n\n  featChatData(item) {\n    const data = JSON.parse(JSON.stringify(item.data));\n\n    // Feat properties\n    const props = [`Level ${data.level.value || 0}`, data.actionType.value ? PF2E.actionTypes[data.actionType.value] : null];\n    // if (traits.length != 0) props = props.concat(traits);\n\n    data.properties = props.filter((p) => p);\n\n    const traits = [];\n    if ((data.traits.value || []).length !== 0) {\n      for (let i = 0; i < data.traits.value.length; i++) {\n        const traitsObject = {\n          label: PF2E.featTraits[data.traits.value[i]] || data.traits.value[i].charAt(0).toUpperCase() + data.traits.value[i].slice(1),\n          description: PF2E.traitsDescriptions[data.traits.value[i]] || \"\",\n        };\n        traits.push(traitsObject);\n      }\n    }\n    data.traits = traits.filter((p) => p);\n    return data;\n  },\n\n  /* -------------------------------------------- */\n\n  actionChatData(item, actorData) {\n    const data = JSON.parse(JSON.stringify(item.data));\n\n    let associatedWeapon = null;\n    if (data.weapon.value) associatedWeapon = actorData.items.find((item) => item._id === data.weapon.value);\n\n    // Feat properties\n    const props = [PF2E.actionTypes[data.actionType.value], associatedWeapon ? associatedWeapon.name : null];\n    // if (traits.length != 0) props = props.concat(traits);\n\n    data.properties = props.filter((p) => p);\n\n    const traits = [];\n    if ((data.traits.value || []).length !== 0) {\n      for (let i = 0; i < data.traits.value.length; i++) {\n        const traitsObject = {\n          label: PF2E.featTraits[data.traits.value[i]] || data.traits.value[i].charAt(0).toUpperCase() + data.traits.value[i].slice(1),\n          description: PF2E.traitsDescriptions[data.traits.value[i]] || \"\",\n        };\n        traits.push(traitsObject);\n      }\n    }\n    data.traits = traits.filter((p) => p);\n\n    return data;\n  },\n\n  /* -------------------------------------------- */\n\n  conditionChatData(item) {\n    const data = JSON.parse(JSON.stringify(item.data));\n    data.properties = [];\n    return data;\n  },\n\n  /* -------------------------------------------- */\n\n  effectChatData(item) {\n    const data = JSON.parse(JSON.stringify(item.data));\n    data.properties = [];\n    return data;\n  },\n};\n\n/* -------------------------------------------- */\n\nfunction getArmorBonus(itemData) {\n  const potencyRune = toNumber(itemData?.potencyRune?.value) ?? 0;\n  const baseArmor = toNumber(itemData.armor.value) ?? 0;\n  return baseArmor + potencyRune;\n}\n\n/* -------------------------------------------- */\n\nfunction getAttackBonus(itemData) {\n  if (itemData.group?.value === \"bomb\") {\n    return toNumber(itemData?.bonus?.value) ?? 0;\n  }\n  return toNumber(itemData?.potencyRune?.value) ?? 0;\n}\n\n/* -------------------------------------------- */\n\nfunction calculateMap(item) {\n  if (item.type === \"weapon\") {\n    // calculate multiple attack penalty tiers\n    const agile = (item.data.traits.value || []).includes(\"agile\");\n    const alternateMAP = (item.data.MAP || {}).value;\n    switch (alternateMAP) {\n      case \"1\":\n        return { map2: -1, map3: -2 };\n      case \"2\":\n        return { map2: -2, map3: -4 };\n      case \"3\":\n        return { map2: -3, map3: -6 };\n      case \"4\":\n        return { map2: -4, map3: -8 };\n      case \"5\":\n        return { map2: -5, map3: -10 };\n      default: {\n        if (agile) return { map2: -4, map3: -8 };\n        else return { map2: -5, map3: -10 };\n      }\n    }\n  }\n  return { map2: -5, map3: -10 };\n}\n\n/* -------------------------------------------- */\n\nfunction addSign(number) {\n  if (number < 0) {\n    return `${number}`;\n  }\n  if (number > 0) {\n    return `+${number}`;\n  }\n  return \"0\";\n}\n\n/* -------------------------------------------- */\n\nfunction toNumber(value) {\n  if (value === null || value === undefined || typeof value === \"number\") {\n    return value;\n  }\n  const result = parseInt(value, 10);\n  if (Number.isNaN(result)) {\n    return undefined;\n  }\n  return result;\n}\n","import localize from \"./handlebars/helpers/stringify\";\nimport { ProficiencyModifier, initModifiers } from \"./libs/modifiers\";\nimport { ConditionManager } from \"./libs/conditions\";\nimport { getContainerMap } from \"./libs/container\";\nimport { indexBulkItemsById, itemsFromActorData, stacks, calculateBulk, formatBulk, defaultBulkConfig } from \"./libs/bulk\";\nimport { calculateEncumbrance } from \"./libs/encumbrance\";\nimport { ChatData } from \"./libs/ChatData\";\n\nTextEditor._decoder = document.createElement(\"textarea\");\n\nconst tabs = [\n  {\n    navSelector: \".sheet-navigation\",\n    contentSelector: \".sheet-content\",\n    initial: \"character\",\n  },\n];\n\nconst _tabs = createTabHandlers();\n\n/**\n * @param  {HandlebarsTemplatable} sheetTemplate\n * @param  {Object} actorData\n * @param  {String} baseUrl\n */\nfunction populateSheet(sheetTemplate, actorData, baseUrl) {\n  initModifiers(actorData);\n  const data = getData(actorData, baseUrl);\n\n  const templateObject = {\n    actor: data.actorData,\n    data: data.actorData.data,\n    items: data.actorData.items,\n    isCharacter: data.actorData.data.type === \"character\",\n    isNPC: data.actorData.data.type === \"npc\",\n    hasStamina: data.actorData.flags?.externalactor?.hasStamina || false,\n    totalTreasure: data.actorData.totalTreasure,\n    pfsFactions: PF2E.pfsFactions,\n    owner: true,\n    baseUrl: baseUrl,\n  };\n  console.log(templateObject);\n  $(\".window-content\")[0].innerHTML = sheetTemplate(templateObject, {\n    allowedProtoProperties: {\n      size: true,\n      isCollapsed: true,\n      isOverLoaded: true,\n      fullPercentageMax100: true,\n      isEncumbered: true,\n      isOverLimit: true,\n      limitPercentageMax100: true,\n      bulk: true,\n    },\n  });\n\n  activateListeners(actorData);\n}\n\n/* -------------------------------------------- */\n\n/**\n * @param  {Object} actorData\n * @param  {String} baseUrl\n */\nfunction getData(actorData, baseUrl) {\n  let items = actorData.items;\n\n  items.sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n  // alignment translate\n  if (actorData.data.details?.alignment?.value) {\n    actorData.data.details.alignment.value = PF2E.alignment[actorData.data.details.alignment.value];\n  }\n\n  // size translate\n  if (actorData.data.traits?.size?.value) {\n    actorData.data.traits.size.value = PF2E.actorSizes[actorData.data.traits.size.value];\n  }\n\n  // key ability translate\n  if (actorData.data.details?.keyability?.value) {\n    actorData.data.details.keyability.value = PF2E.abilities[actorData.data.details.keyability.value];\n  }\n\n  // ability labels\n  Object.keys(actorData.data.abilities).forEach((key) => {\n    actorData.data.abilities[key].label = PF2E.abilities[key];\n  });\n\n  // saves\n  Object.keys(actorData.data.saves).forEach((key) => {\n    actorData.data.saves[key].label = PF2E.saves[key];\n    actorData.data.saves[key].rankName = PF2E.proficiencyLevels[actorData.data.saves[key].rank];\n  });\n\n  // heroPoints\n  if (actorData.data.attributes.heroPoints) {\n    actorData.data.attributes.heroPoints.icon = getHeroPointsIcon(actorData.data.attributes.heroPoints.rank);\n    actorData.data.attributes.heroPoints.hover = PF2E.heroPointLevels[actorData.data.attributes.heroPoints.rank];\n  }\n\n  // dying\n  if (actorData.data.attributes.dying) {\n    actorData.data.attributes.dying.containerWidth = `width: ${actorData.data.attributes.dying.max * 13}px;`;\n    actorData.data.attributes.dying.icon = getDyingIcon(actorData.data.attributes.dying.value, actorData);\n  }\n\n  // wounded\n  if (actorData.data.attributes.wounded) {\n    actorData.data.attributes.wounded.icon = getWoundedIcon(actorData.data.attributes.wounded.value, actorData);\n    actorData.data.attributes.wounded.max = actorData.data.attributes.dying.max - 1;\n  }\n\n  // doomed\n  if (actorData.data.attributes.doomed) {\n    actorData.data.attributes.doomed.icon = getDoomedIcon(actorData.data.attributes.doomed.value, actorData);\n    actorData.data.attributes.doomed.max = actorData.data.attributes.dying.max - 1;\n  }\n\n  // perception text\n  if (actorData.data.attributes?.perception?.rank) {\n    actorData.data.attributes.perception.rankName = PF2E.proficiencyLevels[actorData.data.attributes.perception.rank];\n  }\n\n  // class dc text\n  if (actorData.data.attributes?.classDC?.rank) {\n    actorData.data.attributes.classDC.rankName = PF2E.proficiencyLevels[actorData.data.attributes.classDC.rank];\n  }\n\n  // martial skills\n  if (actorData.data?.martial) {\n    for (const [s, skl] of Object.entries(actorData.data.martial)) {\n      skl.icon = getProficiencyIcon(skl.rank);\n      skl.hover = PF2E.proficiencyLevels[skl.rank];\n      skl.label = PF2E.martialSkills[s];\n      skl.value = ProficiencyModifier.fromLevelAndRank(actorData.data.details.level.value, skl.rank || 0).modifier;\n    }\n  }\n\n  // skill labels\n  if (actorData.data?.skills) {\n    for (const [s, skl] of Object.entries(actorData.data.skills)) {\n      skl.icon = getProficiencyIcon(skl.rank);\n      skl.hover = PF2E.proficiencyLevels[skl.rank];\n      skl.label = skl.label ?? PF2E.skills[s];\n    }\n  }\n\n  prepareItems(actorData);\n\n  // currency based on items\n  if (actorData.items) {\n    const treasure = calculateWealth(actorData.items);\n    actorData.totalTreasure = {};\n    for (const [denomination, value] of Object.entries(treasure)) {\n      actorData.totalTreasure[denomination] = {\n        value,\n        label: PF2E.currencies[denomination],\n      };\n    }\n  }\n\n  // traits\n  prepareTraits(actorData.data.traits);\n\n  actorData.data.effects = {};\n\n  actorData.data.effects.conditions = ConditionManager.getFlattenedConditions(actorData.items.filter((i) => i.flags.pf2e?.condition && i.type === \"condition\"));\n\n  return {\n    actorData,\n    items,\n  };\n}\n\n/* -------------------------------------------- */\n\nfunction activateListeners(actorData) {\n  // sheet object\n  const html = $(\".window-content\").first();\n\n  // bind tabs to pages\n  _tabs.forEach((t) => t.bind(html[0]));\n\n  {\n    // ensure correct tab name is displayed after actor update\n    const title = $(\".sheet-navigation .active\").data(\"tabTitle\");\n    if (title) {\n      html.find(\".navigation-title\").text(title);\n    }\n  }\n\n  html.find(\".sheet-navigation\").on(\"mouseover\", \".item\", (event) => {\n    const title = event.currentTarget.dataset.tabTitle;\n    if (title) {\n      $(event.currentTarget).parents(\".sheet-navigation\").find(\".navigation-title\").text(title);\n    }\n  });\n\n  html.find(\".sheet-navigation\").on(\"mouseout\", \".item\", (event) => {\n    const parent = $(event.currentTarget).parents(\".sheet-navigation\");\n    const title = parent.find(\".item.active\").data(\"tabTitle\");\n    if (title) {\n      parent.find(\".navigation-title\").text(title);\n    }\n  });\n\n  // item summary\n  html.find(\".item .item-name h4\").click((event) => {\n    onItemSummary(event, actorData);\n  });\n\n  // strike summary\n  html.find(\".strikes-list [data-action-index]\").on(\"click\", \".action-name\", (event) => {\n    $(event.currentTarget).parents(\".expandable\").toggleClass(\"expanded\");\n  });\n\n  // handle sub-tab navigation on the actions tab\n  html.find(\".actions-nav\").on(\"click\", \".tab:not(.tab-active)\", (event) => {\n    const target = $(event.currentTarget);\n    const nav = target.parents(\".actions-nav\");\n    // deselect current tab and panel\n    nav.children(\".tab-active\").removeClass(\"tab-active\");\n    nav.siblings(\".actions-panels\").children(\".actions-panel.active\").removeClass(\"active\");\n    // select new tab and panel\n    target.addClass(\"tab-active\");\n    nav\n      .siblings(\".actions-panels\")\n      .children(`#${target.data(\"panel\")}`)\n      .addClass(\"active\");\n  });\n\n  // Pad field width\n  html.find(\"[data-wpad]\").each((i, e) => {\n    const text = e.tagName === \"INPUT\" ? e.value : e.innerText;\n    const w = (text.length * parseInt(e.getAttribute(\"data-wpad\"), 10)) / 2;\n    e.setAttribute(\"style\", `flex: 0 0 ${w}px`);\n  });\n\n  // modifier tooltip\n  html.find(\".hover\").tooltipster({\n    animation: \"fade\",\n    delay: 200,\n    trigger: \"click\",\n    arrow: false,\n    contentAsHTML: true,\n    debug: true,\n    interactive: true,\n    side: [\"right\", \"bottom\"],\n    theme: \"crb-hover\",\n    minWidth: 120,\n  });\n}\n\n/* -------------------------------------------- */\n/*   Helper Functions                           */\n/* -------------------------------------------- */\n\nfunction createTabHandlers() {\n  return tabs.map((t) => {\n    return new Tabs(t);\n  });\n}\n\n/* -------------------------------------------- */\n\nfunction prepareTraits(traits) {\n  if (traits === undefined) return;\n\n  const map = {\n    languages: PF2E.languages,\n    dr: PF2E.resistanceTypes,\n    di: PF2E.immunityTypes,\n    dv: PF2E.weaknessTypes,\n    ci: PF2E.immunityTypes,\n    traits: PF2E.monsterTraits,\n  };\n\n  for (const [t, choices] of Object.entries(map)) {\n    const trait = traits[t] || { value: [], selected: [] };\n\n    if (Array.isArray(trait)) {\n      trait.selected = {};\n      for (const entry of trait) {\n        if (typeof entry === \"object\") {\n          if (\"exceptions\" in entry && entry.exceptions !== \"\") {\n            trait.selected[entry.type] = `${choices[entry.type]} (${entry.value}) [${entry.exceptions}]`;\n          } else {\n            let text = `${choices[entry.type]}`;\n            if (entry.value !== \"\") text = `${text} (${entry.value})`;\n            trait.selected[entry.type] = text;\n          }\n        } else {\n          trait.selected[entry] = choices[entry] || `${entry}`;\n        }\n      }\n    } else if (trait.value) {\n      trait.selected = Object.fromEntries(trait.value.map((name) => [name, name]));\n    }\n\n    // Add custom entry\n    if (trait.custom) trait.selected.custom = trait.custom;\n  }\n}\n\n/* -------------------------------------------- */\n\nfunction prepareItems(actorData) {\n  // Inventory\n  const inventory = {\n    weapon: { label: localize(\"PF2E.InventoryWeaponsHeader\"), items: [] },\n    armor: { label: localize(\"PF2E.InventoryArmorHeader\"), items: [] },\n    equipment: { label: localize(\"PF2E.InventoryEquipmentHeader\"), items: [], investedItemCount: 0 },\n    consumable: { label: localize(\"PF2E.InventoryConsumablesHeader\"), items: [] },\n    treasure: { label: localize(\"PF2E.InventoryTreasureHeader\"), items: [] },\n    backpack: { label: localize(\"PF2E.InventoryBackpackHeader\"), items: [] },\n  };\n\n  // Spellbook\n  const tempSpellbook = [];\n  const spellcastingEntriesList = [];\n  const spellbooks = [];\n  spellbooks.unassigned = {};\n\n  // Spellcasting Entries\n  const spellcastingEntries = [];\n\n  // Feats\n  const feats = {\n    ancestry: { label: \"PF2E.FeatAncestryHeader\", feats: [] },\n    ancestryfeature: { label: \"PF2E.FeaturesAncestryHeader\", feats: [] },\n    archetype: { label: \"PF2E.FeatArchetypeHeader\", feats: [] },\n    bonus: { label: \"PF2E.FeatBonusHeader\", feats: [] },\n    class: { label: \"PF2E.FeatClassHeader\", feats: [] },\n    classfeature: { label: \"PF2E.FeaturesClassHeader\", feats: [] },\n    skill: { label: \"PF2E.FeatSkillHeader\", feats: [] },\n    general: { label: \"PF2E.FeatGeneralHeader\", feats: [] },\n    pfsboon: { label: \"PF2E.FeatPFSBoonHeader\", feats: [] },\n    deityboon: { label: \"PF2E.FeatDeityBoonHeader\", feats: [] },\n    curse: { label: \"PF2E.FeatCurseHeader\", feats: [] },\n  };\n\n  // Actions\n  const actions = {\n    action: { label: localize(\"PF2E.ActionsActionsHeader\"), actions: [] },\n    reaction: { label: localize(\"PF2E.ActionsReactionsHeader\"), actions: [] },\n    free: { label: localize(\"PF2E.ActionsFreeActionsHeader\"), actions: [] },\n  };\n\n  // Read-Only Actions\n  const readonlyActions = {\n    interaction: { label: \"Interaction Actions\", actions: [] },\n    defensive: { label: \"Defensive Actions\", actions: [] },\n    offensive: { label: \"Offensive Actions\", actions: [] },\n  };\n\n  const readonlyEquipment = [];\n\n  const attacks = {\n    weapon: { label: \"Compendium Weapon\", items: [], type: \"weapon\" },\n  };\n\n  // Skills\n  const lores = [];\n  const martialSkills = [];\n\n  // Iterate through items, allocating to containers\n  const bulkConfig = {\n    ignoreCoinBulk: actorData.flags?.externalactor?.ignoreCoinBulk || defaultBulkConfig.ignoreCoinBulk,\n    ignoreContainerOverflow: actorData.flags?.externalactor?.ignoreContainerOverflow || defaultBulkConfig.ignoreContainerOverflow,\n  };\n\n  const bulkItems = itemsFromActorData(actorData);\n  const indexedBulkItems = indexBulkItemsById(bulkItems);\n  const containers = getContainerMap(actorData.items, indexedBulkItems, stacks, bulkConfig);\n\n  let investedCount = 0; // Tracking invested items\n\n  for (const i of actorData.items) {\n    i.img = i.img || \"icons/svg/mystery-man.svg\";\n    i.containerData = containers.get(i._id);\n    i.isContainer = i.containerData.isContainer;\n    i.isNotInContainer = i.containerData.isNotInContainer;\n\n    // Read-Only Equipment\n    if (i.type === \"armor\" || i.type === \"equipment\" || i.type === \"consumable\" || i.type === \"backpack\") {\n      readonlyEquipment.push(i);\n      actorData.hasEquipment = true;\n    }\n\n    i.canBeEquipped = i.isNotInContainer;\n    i.isEquipped = i.data?.equipped?.value ?? false;\n    i.isSellableTreasure = i.type === \"treasure\" && i.data?.stackGroup?.value !== \"coins\";\n    i.hasInvestedTrait = i.data?.traits?.value?.includes(\"invested\") ?? false;\n    i.isInvested = i.data?.invested?.value ?? false;\n    if (i.isInvested) {\n      investedCount += 1;\n    }\n\n    // Inventory\n    if (Object.keys(inventory).includes(i.type)) {\n      i.data.quantity.value = i.data.quantity.value || 0;\n      i.data.weight.value = i.data.weight.value || 0;\n      const [approximatedBulk] = calculateBulk([indexedBulkItems.get(i._id)], stacks, false, bulkConfig);\n      i.totalWeight = formatBulk(approximatedBulk);\n      i.hasCharges = i.type === \"consumable\" && i.data.charges.max > 0;\n      i.isTwoHanded = i.type === \"weapon\" && !!(i.data.traits.value || []).find((x) => x.startsWith(\"two-hand\"));\n      i.wieldedTwoHanded = i.type === \"weapon\" && (i.data.hands || {}).value;\n      if (i.type === \"weapon\") {\n        attacks.weapon.items.push(i);\n      }\n      inventory[i.type].items.push(i);\n    }\n\n    // Spells\n    else if (i.type === \"spell\") {\n      let item;\n      try {\n        item = actorData.items.find((item) => item._id === i._id);\n        i.spellInfo = getSpellInfo(item, actorData);\n      } catch (err) {\n        console.log(`PF2e System | Character Sheet | Could not load item ${i.name}`);\n      }\n      tempSpellbook.push(i);\n    }\n\n    // Spellcasting Entries\n    else if (i.type === \"spellcastingEntry\") {\n      // collect list of entries to use later to match spells against.\n      spellcastingEntriesList.push(i._id);\n\n      const spellRank = i.data.proficiency?.value || 0;\n      const spellProficiency = ProficiencyModifier.fromLevelAndRank(actorData.data.details.level.value, spellRank).modifier;\n      const spellAbl = i.data.ability.value || \"int\";\n      i.data.spelldc.mod = actorData.data.abilities[spellAbl].mod;\n      i.data.spelldc.breakdown = `10 + ${spellAbl} modifier(${actorData.data.abilities[spellAbl].mod}) + proficiency(${spellProficiency}) + item bonus(${i.data.item.value})`;\n\n      i.data.spelldc.icon = getProficiencyIcon(i.data.proficiency.value);\n      i.data.spelldc.hover = PF2E.proficiencyLevels[i.data.proficiency.value];\n      i.data.tradition.title = PF2E.magicTraditions[i.data.tradition.value];\n      i.data.prepared.title = PF2E.preparationType[i.data.prepared.value];\n      // Check if prepared spellcasting type and set Boolean\n      if ((i.data.prepared || {}).value === \"prepared\") i.data.prepared.preparedSpells = true;\n      else i.data.prepared.preparedSpells = false;\n      // Check if Ritual spellcasting tradition and set Boolean\n      if ((i.data.tradition || {}).value === \"ritual\") i.data.tradition.ritual = true;\n      else i.data.tradition.ritual = false;\n      if ((i.data.tradition || {}).value === \"focus\") {\n        i.data.tradition.focus = true;\n        if (i.data.focus === undefined) i.data.focus = { points: 1, pool: 1 };\n        i.data.focus.icon = getFocusIcon(i.data.focus);\n      } else i.data.tradition.focus = false;\n\n      spellcastingEntries.push(i);\n    }\n\n    // Feats\n    else if (i.type === \"feat\") {\n      const featType = i.data.featType.value || \"bonus\";\n      const actionType = i.data.actionType.value || \"passive\";\n\n      feats[featType].feats.push(i);\n      if (Object.keys(actions).includes(actionType)) {\n        i.feat = true;\n        let actionImg = 0;\n        if (actionType === \"action\") actionImg = parseInt((i.data.actions || {}).value, 10) || 1;\n        else if (actionType === \"reaction\") actionImg = \"reaction\";\n        else if (actionType === \"free\") actionImg = \"free\";\n        i.img = getActionImg(actionImg);\n        actions[actionType].actions.push(i);\n\n        // Read-Only Actions\n        if (i.data.actionCategory && i.data.actionCategory.value) {\n          switch (i.data.actionCategory.value) {\n            case \"interaction\":\n              readonlyActions.interaction.actions.push(i);\n              actorData.hasInteractionActions = true;\n              break;\n            case \"defensive\":\n              readonlyActions.defensive.actions.push(i);\n              actorData.hasDefensiveActions = true;\n              break;\n            // Should be offensive but throw anything else in there too\n            default:\n              readonlyActions.offensive.actions.push(i);\n              actorData.hasOffensiveActions = true;\n          }\n        } else {\n          readonlyActions.offensive.actions.push(i);\n          actorData.hasOffensiveActions = true;\n        }\n      }\n    }\n\n    // Lore Skills\n    else if (i.type === \"lore\") {\n      i.data.icon = getProficiencyIcon((i.data.proficient || {}).value);\n      i.data.hover = PF2E.proficiencyLevels[(i.data.proficient || {}).value];\n\n      const rank = i.data.proficient?.value || 0;\n      const proficiency = ProficiencyModifier.fromLevelAndRank(actorData.data.details.level.value, rank).modifier;\n      const modifier = actorData.data.abilities.int.mod;\n      const itemBonus = Number((i.data.item || {}).value || 0);\n      i.data.itemBonus = itemBonus;\n      i.data.value = modifier + proficiency + itemBonus;\n      i.data.breakdown = `int modifier(${modifier}) + proficiency(${proficiency}) + item bonus(${itemBonus})`;\n\n      lores.push(i);\n    }\n\n    // Martial Skills\n    else if (i.type === \"martial\") {\n      i.data.icon = getProficiencyIcon((i.data.proficient || {}).value);\n      i.data.hover = PF2E.proficiencyLevels[(i.data.proficient || {}).value];\n\n      const rank = i.data.proficient?.value || 0;\n      const proficiency = ProficiencyModifier.fromLevelAndRank(actorData.data.details.level.value, rank).modifier;\n      i.data.value = proficiency;\n      i.data.breakdown = `proficiency(${proficiency})`;\n\n      martialSkills.push(i);\n    }\n\n    // Actions\n    if (i.type === \"action\") {\n      const actionType = i.data.actionType.value || \"action\";\n      let actionImg = 0;\n      if (actionType === \"action\") actionImg = parseInt(i.data.actions.value, 10) || 1;\n      else if (actionType === \"reaction\") actionImg = \"reaction\";\n      else if (actionType === \"free\") actionImg = \"free\";\n      else if (actionType === \"passive\") actionImg = \"passive\";\n      i.img = getActionImg(actionImg);\n      if (actionType === \"passive\") actions.free.actions.push(i);\n      else actions[actionType].actions.push(i);\n\n      // Read-Only Actions\n      if (i.data.actionCategory && i.data.actionCategory.value) {\n        switch (i.data.actionCategory.value) {\n          case \"interaction\":\n            readonlyActions.interaction.actions.push(i);\n            actorData.hasInteractionActions = true;\n            break;\n          case \"defensive\":\n            readonlyActions.defensive.actions.push(i);\n            actorData.hasDefensiveActions = true;\n            break;\n          case \"offensive\":\n            readonlyActions.offensive.actions.push(i);\n            actorData.hasOffensiveActions = true;\n            break;\n          // Should be offensive but throw anything else in there too\n          default:\n            readonlyActions.offensive.actions.push(i);\n            actorData.hasOffensiveActions = true;\n        }\n      } else {\n        readonlyActions.offensive.actions.push(i);\n        actorData.hasOffensiveActions = true;\n      }\n    }\n  }\n\n  inventory.equipment.investedItemCount = investedCount; // Tracking invested items\n\n  const embeddedEntityUpdate = [];\n  // Iterate through all spells in the temp spellbook and check that they are assigned to a valid spellcasting entry. If not place in unassigned.\n  for (const i of tempSpellbook) {\n    // check if the spell has a valid spellcasting entry assigned to the location value.\n    if (spellcastingEntriesList.includes(i.data.location.value)) {\n      const location = i.data.location.value;\n      spellbooks[location] = spellbooks[location] || {};\n      prepareSpell(actorData, spellbooks[location], i);\n    } else if (spellcastingEntriesList.length === 1) {\n      // if not BUT their is only one spellcasting entry then assign the spell to this entry.\n      const location = spellcastingEntriesList[0];\n      spellbooks[location] = spellbooks[location] || {};\n\n      // Update spell to perminantly have the correct ID now\n      embeddedEntityUpdate.push({ _id: i._id, \"data.location.value\": spellcastingEntriesList[0] });\n\n      prepareSpell(actorData, spellbooks[location], i);\n    } else {\n      // else throw it in the orphaned list.\n      prepareSpell(actorData, spellbooks.unassigned, i);\n    }\n  }\n\n  // assign mode to actions\n  Object.values(actions)\n    .flatMap((section) => section.actions)\n    .forEach((action) => {\n      action.downtime = action.data.traits.value.includes(\"downtime\");\n      action.exploration = action.data.traits.value.includes(\"exploration\");\n      action.encounter = !(action.downtime || action.exploration);\n    });\n\n  // Assign and return\n  actorData.inventory = inventory;\n  // Any spells found that don't belong to a spellcasting entry are added to a \"orphaned spells\" spell book (allowing the player to fix where they should go)\n  if (Object.keys(spellbooks.unassigned).length) {\n    actorData.orphanedSpells = true;\n    actorData.orphanedSpellbook = spellbooks.unassigned;\n  }\n  actorData.feats = feats;\n  actorData.attacks = attacks;\n  actorData.actions = actions;\n  actorData.readonlyActions = readonlyActions;\n  actorData.readonlyEquipment = readonlyEquipment;\n  actorData.lores = lores;\n  actorData.martialSkills = martialSkills;\n\n  for (const entry of spellcastingEntries) {\n    if (entry.data.prepared.preparedSpells && spellbooks[entry._id]) {\n      preparedSpellSlots(entry, spellbooks[entry._id], actorData);\n    }\n    entry.spellbook = spellbooks[entry._id];\n  }\n\n  actorData.spellcastingEntries = spellcastingEntries;\n\n  // shield\n  const equippedShield = getEquippedShield(actorData.items);\n  if (equippedShield === undefined) {\n    actorData.data.attributes.shield = {\n      hp: {\n        value: 0,\n      },\n      maxHp: {\n        value: 0,\n      },\n      armor: {\n        value: 0,\n      },\n      hardness: {\n        value: 0,\n      },\n      brokenThreshold: {\n        value: 0,\n      },\n    };\n    actorData.data.attributes.shieldBroken = false;\n  } else {\n    actorData.data.attributes.shield = JSON.parse(JSON.stringify(equippedShield.data));\n    actorData.data.attributes.shieldBroken = equippedShield?.data?.hp?.value <= equippedShield?.data?.brokenThreshold?.value;\n  }\n\n  // Inventory encumbrance\n  // FIXME: this is hard coded for now\n  const featNames = new Set(actorData.items.filter((item) => item.type === \"feat\").map((item) => item.name));\n\n  let bonusEncumbranceBulk = actorData.data.attributes.bonusEncumbranceBulk ?? 0;\n  let bonusLimitBulk = actorData.data.attributes.bonusLimitBulk ?? 0;\n  if (featNames.has(\"Hefty Hauler\")) {\n    bonusEncumbranceBulk += 2;\n    bonusLimitBulk += 2;\n  }\n  const equippedLiftingBelt = actorData.items.find((item) => item.name === \"Lifting Belt\" && item.data.equipped.value) !== undefined;\n  if (equippedLiftingBelt) {\n    bonusEncumbranceBulk += 1;\n    bonusLimitBulk += 1;\n  }\n  const [bulk] = calculateBulk(bulkItems, stacks, false, bulkConfig);\n  actorData.data.attributes.encumbrance = calculateEncumbrance(\n    actorData.data.abilities.str.mod,\n    bonusEncumbranceBulk,\n    bonusLimitBulk,\n    bulk,\n    actorData.data?.traits?.size?.value ?? \"Medium\"\n  );\n}\n\n/* -------------------------------------------- */\n\nfunction getActionImg(action) {\n  const img = {\n    0: \"icons/svg/mystery-man.svg\",\n    1: \"systems/pf2e/icons/actions/OneAction.png\",\n    2: \"systems/pf2e/icons/actions/TwoActions.png\",\n    3: \"systems/pf2e/icons/actions/ThreeActions.png\",\n    free: \"systems/pf2e/icons/actions/FreeAction.png\",\n    reaction: \"systems/pf2e/icons/actions/Reaction.png\",\n    passive: \"systems/pf2e/icons/actions/Passive.png\",\n  };\n  return img[action];\n}\n\n/* -------------------------------------------- */\n\nfunction getProficiencyIcon(level) {\n  const icons = {\n    0: \"\",\n    1: '<i class=\"fas fa-check-circle\"></i>',\n    2: '<i class=\"fas fa-check-circle\"></i><i class=\"fas fa-check-circle\"></i>',\n    3: '<i class=\"fas fa-check-circle\"></i><i class=\"fas fa-check-circle\"></i><i class=\"fas fa-check-circle\"></i>',\n    4: '<i class=\"fas fa-check-circle\"></i><i class=\"fas fa-check-circle\"></i><i class=\"fas fa-check-circle\"></i><i class=\"fas fa-check-circle\"></i>',\n  };\n  return icons[level];\n}\n\n/* -------------------------------------------- */\n\nfunction getEquippedShield(items) {\n  return items.find((item) => item.type === \"armor\" && item.data.equipped.value && item.data.armorType.value === \"shield\");\n}\n\n/* -------------------------------------------- */\n\nfunction getHeroPointsIcon(level) {\n  const icons = {\n    0: '<i class=\"far fa-circle\"></i><i class=\"far fa-circle\"></i><i class=\"far fa-circle\"></i>',\n    1: '<i class=\"fas fa-hospital-symbol\"></i><i class=\"far fa-circle\"></i><i class=\"far fa-circle\"></i>',\n    2: '<i class=\"fas fa-hospital-symbol\"></i><i class=\"fas fa-hospital-symbol\"></i><i class=\"far fa-circle\"></i>',\n    3: '<i class=\"fas fa-hospital-symbol\"></i><i class=\"fas fa-hospital-symbol\"></i><i class=\"fas fa-hospital-symbol\"></i>',\n  };\n  return icons[level];\n}\n\n/* -------------------------------------------- */\n\nfunction getDyingIcon(level, actorData) {\n  const maxDying = actorData.data.attributes.dying.max || 4;\n  const doomed = actorData.data.attributes.doomed.value || 0;\n  const circle = '<i class=\"far fa-circle\"></i>';\n  const cross = '<i class=\"fas fa-times-circle\"></i>';\n  const skull = '<i class=\"fas fa-skull\"></i>';\n  const redOpen = \"<span>\";\n  const redClose = \"</span>\";\n  const icons = {};\n\n  for (let dyingLevel = 0; dyingLevel <= maxDying; dyingLevel++) {\n    icons[dyingLevel] = dyingLevel === maxDying ? redOpen : \"\";\n    for (let column = 1; column <= maxDying; column++) {\n      if (column >= maxDying - doomed || dyingLevel === maxDying) {\n        icons[dyingLevel] += skull;\n      } else if (dyingLevel < column) {\n        icons[dyingLevel] += circle;\n      } else {\n        icons[dyingLevel] += cross;\n      }\n    }\n    icons[dyingLevel] += dyingLevel === maxDying ? redClose : \"\";\n  }\n\n  return icons[level];\n}\n\n/* -------------------------------------------- */\n\nfunction getWoundedIcon(level, actorData) {\n  const maxDying = actorData.data.attributes.dying.max || 4;\n  const icons = {};\n  const usedPoint = '<i class=\"fas fa-dot-circle\"></i>';\n  const unUsedPoint = '<i class=\"far fa-circle\"></i>';\n\n  for (let i = 0; i < maxDying; i++) {\n    let iconHtml = \"\";\n    for (let iconColumn = 1; iconColumn < maxDying; iconColumn++) {\n      iconHtml += iconColumn <= i ? usedPoint : unUsedPoint;\n    }\n    icons[i] = iconHtml;\n  }\n\n  return icons[level];\n}\n\n/* -------------------------------------------- */\n\nfunction getDoomedIcon(level, actorData) {\n  const maxDying = actorData.data.attributes.dying.max || 4;\n  const icons = {};\n  const usedPoint = '<i class=\"fas fa-skull\"></i>';\n  const unUsedPoint = '<i class=\"far fa-circle\"></i>';\n\n  for (let i = 0; i < maxDying; i++) {\n    let iconHtml = \"\";\n    for (let iconColumn = 1; iconColumn < maxDying; iconColumn++) {\n      iconHtml += iconColumn <= i ? usedPoint : unUsedPoint;\n    }\n    icons[i] = iconHtml;\n  }\n\n  return icons[level];\n}\n\n/* -------------------------------------------- */\n\nfunction calculateWealth(items) {\n  return items\n    .filter((item) => item.type === \"treasure\" && item?.data?.denomination?.value !== undefined && item?.data?.denomination?.value !== null)\n    .map((item) => {\n      const value = (item.data?.value?.value ?? 1) * (item.data?.quantity?.value ?? 1);\n      return toCoins(item.data.denomination.value, value);\n    })\n    .reduce(combineCoins, noCoins());\n}\n\n/* -------------------------------------------- */\n\nfunction toCoins(denomination, value) {\n  return {\n    pp: denomination === \"pp\" ? value : 0,\n    gp: denomination === \"gp\" ? value : 0,\n    sp: denomination === \"sp\" ? value : 0,\n    cp: denomination === \"cp\" ? value : 0,\n  };\n}\n\n/* -------------------------------------------- */\n\nfunction combineCoins(first, second) {\n  return {\n    pp: first.pp + second.pp,\n    gp: first.gp + second.gp,\n    sp: first.sp + second.sp,\n    cp: first.cp + second.cp,\n  };\n}\n\n/* -------------------------------------------- */\n\nfunction noCoins() {\n  return {\n    pp: 0,\n    gp: 0,\n    sp: 0,\n    cp: 0,\n  };\n}\n\n/* -------------------------------------------- */\n\nconst getSpellInfo = ChatData.spellChatData;\n\n/* -------------------------------------------- */\n\nfunction getFocusIcon(focus) {\n  const icons = {};\n  const usedPoint = '<i class=\"fas fa-dot-circle\"></i>';\n  const unUsedPoint = '<i class=\"far fa-circle\"></i>';\n\n  for (let i = 0; i <= focus.pool; i++) {\n    // creates focus.pool amount of icon options to be selected in the icons object\n    let iconHtml = \"\";\n    for (let iconColumn = 1; iconColumn <= focus.pool; iconColumn++) {\n      // creating focus.pool amount of icons\n      iconHtml += iconColumn <= i ? usedPoint : unUsedPoint;\n    }\n    icons[i] = iconHtml;\n  }\n\n  return icons[focus.points];\n}\n\n/* -------------------------------------------- */\n\nfunction prepareSpell(actorData, spellbook, spell) {\n  const spellLvl = Number(spell.data.level.value) < 11 ? Number(spell.data.level.value) : 10;\n  let spellcastingEntry = null;\n\n  if ((spell.data.location || {}).value) {\n    spellcastingEntry = actorData.items.find((item) => item._id === spell.data.location.value) || {};\n  }\n\n  // if the spellcaster entry cannot be found (maybe it was deleted?)\n  if (!spellcastingEntry) {\n    console.log(`PF2e System | Prepare Spell | Spellcasting entry not found for spell ${spell.name}`);\n    return;\n  }\n\n  // This is needed only if we want to prepare the data model only for the levels that a spell is already prepared in setup spellbook levels for all of those to catch case where sheet only has spells of lower level prepared in higher level slot\n  const isNotLevelBasedSpellcasting =\n    spellcastingEntry.data?.tradition?.value === \"wand\" ||\n    spellcastingEntry.data?.tradition?.value === \"scroll\" ||\n    spellcastingEntry.data?.tradition?.value === \"ritual\" ||\n    spellcastingEntry.data?.tradition?.value === \"focus\";\n\n  const spellsSlotsWhereThisIsPrepared = Object.entries(spellcastingEntry.data?.slots || {})?.filter(\n    (slotArr) => !!Object.values(slotArr[1].prepared).find((slotSpell) => slotSpell?.id === spell._id)\n  );\n  const highestSlotPrepared =\n    spellsSlotsWhereThisIsPrepared?.map((slot) => parseInt(slot[0].match(/slot(\\d+)/)[1], 10)).reduce((acc, cur) => (cur > acc ? cur : acc), 0) ?? spellLvl;\n  const normalHighestSpellLevel = Math.ceil(actorData.data.details.level.value / 2);\n  const maxSpellLevelToShow = Math.min(10, Math.max(spellLvl, highestSlotPrepared, normalHighestSpellLevel));\n  // Extend the Spellbook level\n  for (let i = maxSpellLevelToShow; i >= 0; i--) {\n    if (!isNotLevelBasedSpellcasting || i === spellLvl) {\n      spellbook[i] = spellbook[i] || {\n        isCantrip: i === 0,\n        isFocus: i === 11,\n        label: PF2E.spellLevels[i],\n        spells: [],\n        prepared: [],\n        uses: spellcastingEntry ? parseInt(spellcastingEntry.data?.slots[`slot${i}`].value, 10) || 0 : 0,\n        slots: spellcastingEntry ? parseInt(spellcastingEntry.data?.slots[`slot${i}`].max, 10) || 0 : 0,\n        displayPrepared:\n          spellcastingEntry && spellcastingEntry.data.displayLevels && spellcastingEntry.data.displayLevels[i] !== undefined\n            ? spellcastingEntry.data.displayLevels[i]\n            : true,\n        unpreparedSpellsLabel:\n          spellcastingEntry && spellcastingEntry.data.tradition.value === \"arcane\" && spellcastingEntry.data.prepared.value === \"prepared\"\n            ? localize(\"PF2E.UnpreparedSpellsLabelArcanePrepared\")\n            : localize(\"PF2E.UnpreparedSpellsLabel\"),\n      };\n    }\n  }\n\n  // Add the spell to the spellbook at the appropriate level\n  spell.data.school.str = PF2E.spellSchools[spell.data.school.value];\n  // Add chat data\n  try {\n    const item = actorData.items.find((item) => item._id === spell._id);\n    if (item) {\n      spell.spellInfo = getSpellInfo(item, actorData);\n    }\n  } catch (err) {\n    console.log(`PF2e System | Character Sheet | Could not load chat data for spell ${spell.id}`, spell);\n  }\n  spellbook[spellLvl].spells.push(spell);\n}\n\n/* -------------------------------------------- */\n\nfunction preparedSpellSlots(spellcastingEntry, spellbook, actorData) {\n  for (const [key, spl] of Object.entries(spellbook)) {\n    if (spl.slots > 0) {\n      for (let i = 0; i < spl.slots; i++) {\n        const entrySlot = ((spellcastingEntry.data.slots[`slot${key}`] || {}).prepared || {})[i] || null;\n\n        if (entrySlot && entrySlot.id) {\n          const item = actorData.items.find((item) => item._id === entrySlot.id);\n          if (item) {\n            const itemCopy = JSON.parse(JSON.stringify(item));\n            if (entrySlot.expended) {\n              itemCopy.expended = true;\n            } else {\n              itemCopy.expended = false;\n            }\n\n            spl.prepared[i] = itemCopy;\n            if (spl.prepared[i]) {\n              // enrich data with spell school formatted string\n              if (spl.prepared[i].data && spl.prepared[i].data.school && spl.prepared[i].data.school.str) {\n                spl.prepared[i].data.school.str = CONFIG.PF2E.spellSchools[spl.prepared[i].data.school.value];\n              }\n\n              // Add chat data\n              try {\n                spl.prepared[i].spellInfo = getSpellInfo(item, actorData);\n              } catch (err) {\n                console.log(`PF2e System | Character Sheet | Could not load prepared spell ${entrySlot.id}`, item);\n              }\n\n              spl.prepared[i].prepared = true;\n            }\n            // prepared spell not found\n            else {\n              spl.prepared[i] = {\n                name: \"Empty Slot (drag spell here)\",\n                id: null,\n                prepared: false,\n              };\n            }\n          } else {\n            // Could not find an item for ID: ${entrySlot.id}. Marking the slot as empty so it can be overwritten.\n            spl.prepared[i] = {\n              name: \"Empty Slot (drag spell here)\",\n              id: null,\n              prepared: false,\n            };\n          }\n        } else {\n          // if there is no prepared spell for this slot then make it empty.\n          spl.prepared[i] = {\n            name: \"Empty Slot (drag spell here)\",\n            id: null,\n            prepared: false,\n          };\n        }\n      }\n    }\n  }\n}\n\n/* -------------------------------------------- */\n\nfunction onItemSummary(event, actorData) {\n  event.preventDefault();\n\n  const li = $(event.currentTarget).parent().parent();\n  const itemId = li.attr(\"data-item-id\");\n  const itemType = li.attr(\"data-item-type\");\n  let item;\n\n  if (itemType === \"spellSlot\") return;\n\n  try {\n    item = actorData.items.find((item) => item._id === itemId);\n    if (!item.type) return;\n  } catch (err) {\n    return;\n  }\n\n  if (item.type === \"spellcastingEntry\" || item.type === \"condition\") return;\n\n  const chatData = getChatData(item, actorData, { secrets: actorData.owner });\n\n  renderItemSummary(li, chatData);\n}\n\n/* -------------------------------------------- */\n\n/**\n * @param {JQuery} li\n */\nfunction renderItemSummary(li, chatData) {\n  // Toggle summary\n  if (li.hasClass(\"expanded\")) {\n    const summary = li.children(\".item-summary\");\n    summary.slideUp(200, () => summary.remove());\n  } else {\n    const div = $(`<div class=\"item-summary\"><div class=\"item-description\">${chatData.description.value}</div></div>`);\n    const props = $('<div class=\"item-properties tags\"></div>');\n    if (chatData.properties) {\n      chatData.properties\n        .filter((p) => typeof p === \"string\")\n        .forEach((p) => {\n          props.append(`<span class=\"tag tag_secondary\">${localize(p)}</span>`);\n        });\n    }\n    if (chatData.critSpecialization)\n      props.append(\n        `<span class=\"tag\" title=\"${localize(chatData.critSpecialization.description)}\" style=\"background: rgb(69,74,124); color: white;\">${localize(\n          chatData.critSpecialization.label\n        )}</span>`\n      );\n    // append traits (only style the tags if they contain description data)\n    if (chatData.traits && chatData.traits.length) {\n      chatData.traits.forEach((p) => {\n        if (p.description) props.append(`<span class=\"tag tag_alt\" title=\"${localize(p.description)}\">${localize(p.label)}</span>`);\n        else props.append(`<span class=\"tag\">${localize(p.label)}</span>`);\n      });\n    }\n\n    div.append(props);\n    li.append(div.hide());\n    div.slideDown(200);\n  }\n  li.toggleClass(\"expanded\");\n}\n\n/* -------------------------------------------- */\n\nfunction getChatData(item, actorData, htmlOptions) {\n  const itemType = item.type;\n  const data = ChatData[`${itemType}ChatData`](item, actorData);\n  if (data) {\n    data.description.value = TextEditor.enrichHTML(data.description.value, htmlOptions);\n  }\n  return data;\n}\n\n/* -------------------------------------------- */\n\nArray.fromRange = function (n) {\n  return Array.from(new Array(parseInt(n)).keys());\n};\n\n/**\n * listens to the hook that tells it to start the population\n */\n\nHooks.on(\"showSheet\", populateSheet);\n"],"sourceRoot":""}